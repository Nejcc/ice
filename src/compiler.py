# src/compiler.py

from src.lexer import tokenize
from src.parser import parse

def compile_ice(file_path):
    """
    Function to compile an ICE source file.
    """
    print(f"Compiling {file_path}...")

    try:
        with open(file_path, 'r') as file:
            source_code = file.read()
            tokens = tokenize(source_code)

            # Print the tokens generated by the lexer
            print("Tokens:")
            for token in tokens:
                print(token)
            
            # Parse the tokens into an AST
            ast = parse(tokens)
            print("\nAbstract Syntax Tree (AST):")
            print(ast)
            
            # Continue with the rest of the compilation logic
    except FileNotFoundError:
        print(f"Error: The file '{file_path}' was not found.")
    except SyntaxError as e:
        print(f"Syntax error: {e}")
